image: "archlinux/base"

stages:
  - lint
  - test

.compile-cache-def: &compile-cache-settings
  cache:
    paths:
      - target
      - deps/internal/consensus/.stack-work
      - stack

.generic:
  variables:
    LD_LIBRARY_PATH: "/usr/local/lib"
    GIT_SUBMODULE_STRATEGY: recursive

"cargo:test":
  <<: *compile-cache-settings
  extends: .generic
  stage: test
  script:
    - mkdir -p stack
    - mkdir -p /root/.stack
    - touch stack/do-not-touch
    - cp -rf stack/* /root/.stack/
    - cp scripts/init.build.env.sh .
    - pacman -Sy && pacman -Syyu --noconfirm
    - pacman -S protobuf cmake go clang git libtool rustup make m4 pkgconf autoconf automake file which boost patch libunwind libdwarf elfutils unbound --noconfirm
    - pacman -Scc --noconfirm
    - ./init.build.env.sh
    - rustc --version && cargo --version
    - stack exec -- ghc --print-libdir
    - ( cd dns && cargo test --all --verbose --color=always)
    - ( cd consensus-sys && cargo test --all --verbose --color=always)
    - echo "Running tests without instrumentation"
    - cargo test --all --verbose --color=always
    - echo "Running tests with instrumentation"
    - cargo test --all --verbose --color=always --features=instrumentation
    - cp -rf /root/.stack/* stack/

.generic-lint:
  extends: .generic

"lint:fmt":
  extends: .generic-lint
  stage: lint
  image: rustlang/rust:nightly
  before_script:
    - rustup default nightly-2019-03-22
    - rustup component add rustfmt
  script:
    - rustc --version && cargo --version
    - touch src/proto/concordium_p2p_rpc.rs
    - touch src/proto/concordium_p2p_rpc_grpc.rs
    - cargo fmt -- --color=always
    - ( cd consensus-sys && cargo fmt -- --color=always)
    - ( cd dns && cargo fmt -- --color=always)
    - test $(git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | wc -l) -eq 0 || (echo 'You have introduced some unformated code:'; git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | sed 's/^/* /'; echo 'Please run `cargo fmt` and amend your MR.'; exit 1)

"lint:clippy":
  extends: .generic-lint
  stage: lint
  <<: *compile-cache-settings
  script:
    - rustc --version && cargo --version
    - mkdir -p stack
    - mkdir -p /root/.stack
    - touch stack/do-not-touch
    - cp -rf stack/* /root/.stack/
    - cp scripts/init.build.env.sh .
    - pacman -Sy && pacman -Syyu --noconfirm
    - pacman -S protobuf cmake go clang git libtool rustup make m4 pkgconf autoconf automake file which boost patch libunwind libdwarf elfutils unbound --noconfirm
    - pacman -Scc --noconfirm
    - ./init.build.env.sh
    - stack exec -- ghc --print-libdir
    - rustup component add clippy
    - cargo clippy --color=always --all
    - cargo clippy --features=instrumentation --color=always --all
    - cp -rf /root/.stack/* stack/
