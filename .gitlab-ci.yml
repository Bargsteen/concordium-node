image: "192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base:latest"

stages:
  - lint
  - test

.generic:
  variables:
    LD_LIBRARY_PATH: "/usr/local/lib"
    GIT_SUBMODULE_STRATEGY: recursive

"cargo:test":
  extends: .generic
  stage: test
  script:
    - cp scripts/init.build.env.sh .
    - ./init.build.env.sh
    - rustc --version && cargo --version
    - stack exec -- ghc --print-libdir
    - ( cd concordium-dns && cargo test --all --verbose --color=always)
    - ( cd concordium-global-state && cargo test --all --verbose --color=always)
    - ( cd concordium-consensus && cargo test --all --verbose --color=always)
    - ( cd concordium-common && cargo test --all --verbose --color=always)
    - echo "Running tests without extra features"
    - cargo test --all --verbose --color=always
    - echo "Running tests with instrumentation feature enabled"
    - cargo test --all --verbose --color=always --features=instrumentation
    - echo "Running tests with s11n extras features enabled"
    - cargo test --all --verbose --color=always --features=s11n_capnp,s11n_nom,s11n_serde_json,s11n_serde_cbor
    - echo "Compile but don't run benches"
    - cargo bench --no-run --features=s11n_nom,s11n_serde_json,s11n_serde_cbor,s11n_capnp,instrumentation --verbose --color=always

.generic-lint:
  extends: .generic

"lint:fmt":
  extends: .generic-lint
  stage: lint
  image: rustlang/rust:nightly
  before_script:
    - rustup default nightly-2019-03-22
    - rustup component add rustfmt
  script:
    - rustc --version && cargo --version
    - touch src/proto/concordium_p2p_rpc.rs
    - touch src/proto/concordium_p2p_rpc_grpc.rs
    - cargo fmt -- --color=always
    - ( cd concordium-global-state && cargo fmt -- --color=always)
    - ( cd concordium-consensus && cargo fmt -- --color=always)
    - ( cd concordium-common && cargo fmt -- --color=always)
    - ( cd concordium-dns && cargo fmt -- --color=always)
    - test $(git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | wc -l) -eq 0 || (echo 'You have introduced some unformatted code:'; git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | sed 's/^/* /'; echo 'Please run `cargo fmt` and amend your MR.'; exit 1)

"lint:clippy":
  extends: .generic-lint
  stage: lint
  script:
    - rustc --version && cargo --version
    - cp scripts/init.build.env.sh .
    - ./init.build.env.sh
    - stack exec -- ghc --print-libdir
    - rustup component add clippy
    - echo "Running clippy with without extra features"
    - cargo clippy --color=always --all -- -Dclippy:all
    - echo "Running clippy with instrumentation feature enabled"
    - cargo clippy --features=instrumentation --color=always --all -- -Dclippy:all
    - echo "Running clippy with s11n extra features enabled"
    - cargo clippy --features=s11n_capnp,s11n_nom,s11n_serde_json,s11n_serde_cbor --color=always --all -- -Dclippy:all
