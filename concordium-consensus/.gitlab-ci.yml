image: 192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base-haskell:0.2

stages:
  - build
  - lint
  - test

.generic:
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    EXTRA_LIBS_PATH: "$CI_PROJECT_DIR/external-libs"
    STACK_ROOT: "${CI_PROJECT_DIR}/.stack"
    LD_LIBRARY_PATH: "${CI_PROJECT_DIR}/crypto/rust-src/target/release:${CI_PROJECT_DIR}/globalstate-mockup/globalstate-rust/target/release:$LD_LIBRARY_PATH"
    GIT_SUBMODULE_STRATEGY: recursive
    RUSTFLAGS: -Dwarnings
    EXTRA_LIBS_PATH: "$CI_PROJECT_DIR/external-libs"
  cache:
    paths:
      - .stack
      - .stack-work
      - target
  before_script:
    - rustc --version && cargo --version
    - git config --global url.https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/.insteadOf ssh://git@gitlab.com:22/
 
.generic-haskell-build:
  extends: .generic

.generic-haskell-test:
  extends: .generic

.generic-rust-test:
  extends: .generic
  cache: 
    policy: pull

.generic-rust-lint:
  extends: .generic
  cache: 
    policy: pull

"stack:build":
  extends: .generic-haskell-build
  stage: build
  artifacts:
    expire_in: 1 hour
    name: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME"
    paths:
      - external-libs/
  script:
    - "./build-deps.sh"
    - "stack build -v --ghc-options -j4 | ts '[%Y-%m-%d %H:%M:%.S]'"
    - consensus-rust/scripts/setup-ci.sh

"cargo:fmt":
  extends: .generic-rust-lint
  stage: lint
  cache: {}
  dependencies: []
  image: 192549843005.dkr.ecr.eu-west-1.amazonaws.com/concordium/base-rust-fmt:2019-11-13
  script:
    - ( cd consensus-rust && cargo fmt -- --color=always)
    - test $(git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | grep -v "tar.gz" | wc -l) -eq 0 || (echo 'You have introduced some unformatted code:'; git ls-files --modified | grep -v ".dll$" | grep -v ".a$" | grep -v ".pc$" | grep -v ".def$" | grep -v "tar.gz" | sed 's/^/* /'; echo 'Please run `cargo fmt` and amend your MR.'; exit 1)

"cargo:clippy":
  extends: .generic-rust-lint
  stage: lint
  script:
    - echo "Running clippy with without extra features"
    - ( cd consensus-rust && cargo clippy --color=always --all -- -Dclippy::all )
    - ( cd globalstate-mockup/globalstate-rust && cargo clippy --color=always --all -- -Dclippy::all )

"cargo:test":
  extends: .generic-rust-test
  stage: test
  script:
    - echo "Running tests without extra features"
    - ( cd globalstate-mockup/globalstate-rust && cargo test --all --color=always )
    - ( cd consensus-rust && cargo test --all --color=always )

"stack:test:crypto":
  extends: .generic-haskell-test
  stage: test
  script:
    - "stack test concordium-crypto | ts '[%Y-%m-%d %H:%M:%.S]'"

"stack:test:acorn":
  extends: .generic-haskell-test
  stage: test
  script:
    - "stack test acorn | ts '[%Y-%m-%d %H:%M:%.S]'"

"stack:test:globalstate-types":
  extends: .generic-haskell-test
  stage: test
  script:
    - "stack test globalstate-types | ts '[%Y-%m-%d %H:%M:%.S]'"

"stack:test:globalstate":
  extends: .generic-haskell-test
  stage: test
  script:
    - "stack test globalstate | ts '[%Y-%m-%d %H:%M:%.S]'"

"stack:test:scheduler":
  extends: .generic-haskell-test
  stage: test
  script:
    - "stack test scheduler | ts '[%Y-%m-%d %H:%M:%.S]'"

"stack:test:consensus":
  extends: .generic-haskell-test
  stage: test
  script:
    - "stack test Concordium --ta --level=2 | ts '[%Y-%m-%d %H:%M:%.S]'"

